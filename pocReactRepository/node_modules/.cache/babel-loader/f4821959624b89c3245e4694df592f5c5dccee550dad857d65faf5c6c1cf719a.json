{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos\\\\pocReactRepository\\\\src\\\\Components\\\\Employee.js\";\nimport React from \"react\";\nimport GlobalContext from './Components/GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Employee extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n  }\n  componentDidMount() {\n    fetch(\"https://localhost:44375/employees\", {\n      method: 'GET',\n      headers: {\n        'Authorization': `123456`,\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(result => {\n      this.setState({\n        isLoaded: true,\n        items: result\n      });\n    },\n    // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }\n  render() {\n    const {\n      error,\n      isLoaded,\n      items\n    } = this.state;\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"Error: \", error.message]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 16\n      }, this);\n    } else if (!isLoaded) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 16\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"These are the employees:\", /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Id: \", item.id, \"|  Name: \", item.name, \"|   job: \", item.job, \" |   WorkstationNo: \", item.workstationNo]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this);\n    }\n  }\n}\nexport default Employee;","map":{"version":3,"names":["React","GlobalContext","jsxDEV","_jsxDEV","Employee","Component","constructor","props","state","error","isLoaded","items","componentDidMount","fetch","method","headers","then","res","json","result","setState","render","children","message","fileName","_jsxFileName","lineNumber","columnNumber","map","item","id","name","job","workstationNo"],"sources":["C:/Users/itzik/source/repos/pocReactRepository/src/Components/Employee.js"],"sourcesContent":["\r\nimport React from \"react\";\r\nimport GlobalContext from './Components/GlobalContext';\r\n\r\nclass Employee extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"https://localhost:44375/employees\",\r\n    \r\n      {\r\n     method: 'GET',\r\n     headers: {\r\n       'Authorization': `123456`,\r\n       'Content-Type': 'application/json',\r\n     }\r\n   }\r\n   \r\n   \r\n   )\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n           \r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n \r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n\r\n          <div>\r\n          These are the employees: \r\n          <ul>\r\n            {items.map(item => (\r\n              <li key={item.id}> \r\n              Id: {item.id}|  Name: {item.name}|   job: {item.job} |   WorkstationNo: {item.workstationNo}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          </div>\r\n        );\r\n      }\r\n    }\r\n  }\r\n  \r\n\r\n  export default Employee;"],"mappings":";AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,QAAQ,SAASJ,KAAK,CAACK,SAAS,CAAC;EACnCC,WAAWA,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,KAAK,EAAE,IAAI;MACXC,QAAQ,EAAE,KAAK;MACfC,KAAK,EAAE;IACT,CAAC;EACH;EAEAC,iBAAiBA,CAAA,EAAG;IAClBC,KAAK,CAAC,mCAAmC,EAEzC;MACDC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAG,QAAO;QACzB,cAAc,EAAE;MAClB;IACF,CAGA,CAAC,CACKC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACvBF,IAAI,CACFG,MAAM,IAAK;MAEV,IAAI,CAACC,QAAQ,CAAC;QACZV,QAAQ,EAAE,IAAI;QACdC,KAAK,EAAEQ;MACT,CAAC,CAAC;IACJ,CAAC;IACD;IACA;IACA;IACCV,KAAK,IAAK;MACT,IAAI,CAACW,QAAQ,CAAC;QACZV,QAAQ,EAAE,IAAI;QACdD;MACF,CAAC,CAAC;IACJ,CACF,CAAC;EACL;EAEAY,MAAMA,CAAA,EAAG;IAEP,MAAM;MAAEZ,KAAK;MAAEC,QAAQ;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACH,KAAK;IAC7C,IAAIC,KAAK,EAAE;MACT,oBAAON,OAAA;QAAAmB,QAAA,GAAK,SAAO,EAACb,KAAK,CAACc,OAAO;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAC1C,CAAC,MAAM,IAAI,CAACjB,QAAQ,EAAE;MACpB,oBAAOP,OAAA;QAAAmB,QAAA,EAAK;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAC9B,CAAC,MAAM;MACL,oBAEExB,OAAA;QAAAmB,QAAA,GAAK,0BAEL,eAAAnB,OAAA;UAAAmB,QAAA,EACGX,KAAK,CAACiB,GAAG,CAACC,IAAI,iBACb1B,OAAA;YAAAmB,QAAA,GAAkB,MACd,EAACO,IAAI,CAACC,EAAE,EAAC,WAAS,EAACD,IAAI,CAACE,IAAI,EAAC,WAAS,EAACF,IAAI,CAACG,GAAG,EAAC,sBAAoB,EAACH,IAAI,CAACI,aAAa;UAAA,GADlFJ,IAAI,CAACC,EAAE;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEZ,CACL;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC;IAEV;EACF;AACF;AAGA,eAAevB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}