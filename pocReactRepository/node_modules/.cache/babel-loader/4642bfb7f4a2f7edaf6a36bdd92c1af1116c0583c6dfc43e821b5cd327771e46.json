{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos\\\\pocReactRepository\\\\src\\\\Components\\\\EmployeeCrud\\\\UpdateEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = () => {\n  _s();\n  const [employeeId, setEmployeeId] = useState('');\n  const [name, setName] = useState('');\n  const [job, setJob] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleUpdateEmployee = () => {\n    debugger;\n    const sanitizedInput = DOMPurify.sanitize(input);\n    const employee = {\n      name: name,\n      job: job\n    };\n    fetch(`https://localhost:44375/employees/${employeeId}`, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Employee not found');\n      }\n      setSuccessMessage('Employee updated successfully');\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Employee ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: employeeId,\n          onChange: event => setEmployeeId(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: job,\n          onChange: event => setJob(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateEmployee,\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), successMessage ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"  \", successMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateEmployee, \"2nYvpObwe29ThWrkcUs3a359ms8=\");\n_c = UpdateEmployee;\nexport default UpdateEmployee;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UpdateEmployee","_s","employeeId","setEmployeeId","name","setName","job","setJob","successMessage","setSuccessMessage","handleUpdateEmployee","sanitizedInput","DOMPurify","sanitize","input","employee","fetch","method","headers","body","JSON","stringify","then","response","ok","Error","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","onClick","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos/pocReactRepository/src/Components/EmployeeCrud/UpdateEmployee.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UpdateEmployee = () => {\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [job, setJob] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleUpdateEmployee = () => {\r\n\r\n    debugger;\r\n    const sanitizedInput = DOMPurify.sanitize(input);\r\n\r\n\r\n    const employee = {\r\n      name: name,\r\n      job: job,\r\n    };\r\n\r\n    fetch(`https://localhost:44375/employees/${employeeId}`, {\r\n      method: 'PUT',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(employee),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Employee not found');\r\n        }\r\n        setSuccessMessage('Employee updated successfully');        \r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Employee</h2>\r\n      <div>\r\n        <label>\r\n          Employee ID:\r\n          <input\r\n            type=\"text\"\r\n            value={employeeId}\r\n            onChange={(event) => setEmployeeId(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Job:\r\n          <input\r\n            type=\"text\"\r\n            value={job}\r\n            onChange={(event) => setJob(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={handleUpdateEmployee}>Update Employee</button>\r\n      {successMessage ?  <h2>  {successMessage}</h2> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEmployee;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}