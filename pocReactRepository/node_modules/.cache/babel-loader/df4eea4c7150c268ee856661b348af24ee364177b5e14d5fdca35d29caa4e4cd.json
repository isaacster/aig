{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos2\\\\pocReactRepository\\\\src\\\\Components\\\\LoginForm.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from 'react';\nimport axios from 'axios';\nimport { AuthContext } from './AuthContext';\nimport userData from '../actions/users.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LoginForm = () => {\n  _s();\n  const {\n    setIsLoggedIn\n  } = useContext(AuthContext);\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const handleUsernameChange = e => {\n    setUsername(e.target.value);\n  };\n  const handlePasswordChange = e => {\n    setPassword(e.target.value);\n  };\n  const validateEmail = email => {\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    return emailRegex.test(email);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!username.trim()) {\n      setEmailError('Username/Email is required');\n      return;\n    } else if (!validateEmail(username.trim())) {\n      setEmailError('Invalid email format');\n      return;\n    }\n    try {\n      const response = userData; // await axios.post('/api/login', { username, password });\n      debugger;\n      const userFiltered = response.filter(user => {\n        return user.password === password && user.email === username;\n      });\n      if (!userFiltered) {\n        console.error('Login failed:', username);\n        return;\n      }\n      console.log('Login successful!');\n      setIsLoggedIn(true);\n    } catch (error) {\n      console.error('Login failed:', error.response.data.message);\n      // AS MENTIONED IN THE READ ME - DUE TO LACK OF TIME SERVER SIDE LOGIN WAS NOT COMPLETED \n      setIsLoggedIn(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Username/Email:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: username,\n        onChange: handleUsernameChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Password:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        value: password,\n        onChange: handlePasswordChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), emailError && /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"login-error\",\n      children: emailError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 22\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(LoginForm, \"G55L1oYCFe1X/QoNwZlkEHsZlMI=\");\n_c = LoginForm;\nexport default LoginForm;\nvar _c;\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","useContext","useState","axios","AuthContext","userData","jsxDEV","_jsxDEV","LoginForm","_s","setIsLoggedIn","username","setUsername","password","setPassword","emailError","setEmailError","handleUsernameChange","e","target","value","handlePasswordChange","validateEmail","email","emailRegex","test","handleSubmit","preventDefault","trim","response","userFiltered","filter","user","console","error","log","data","message","onSubmit","children","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos2/pocReactRepository/src/Components/LoginForm.js"],"sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport axios from 'axios';\r\nimport { AuthContext } from './AuthContext';\r\nimport userData from '../actions/users.json';\r\n\r\nconst LoginForm = () => {\r\n  const { setIsLoggedIn } = useContext(AuthContext);\r\n  const [username, setUsername] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [emailError, setEmailError] = useState('');\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const validateEmail = (email) => {\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    return emailRegex.test(email);\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!username.trim()) {\r\n      setEmailError('Username/Email is required');\r\n      return;\r\n    } else if (!validateEmail(username.trim())) {\r\n      setEmailError('Invalid email format');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const response = userData;            // await axios.post('/api/login', { username, password });\r\ndebugger;\r\n      const userFiltered = response.filter(user => {\r\n        return user.password === password && user.email === username;\r\n      });\r\n\r\n      if (!userFiltered) {\r\n        console.error('Login failed:', username);\r\n        return;\r\n      }\r\n\r\n      console.log('Login successful!');\r\n\r\n      setIsLoggedIn(true);\r\n    } catch (error) {\r\n      console.error('Login failed:', error.response.data.message);\r\n      // AS MENTIONED IN THE READ ME - DUE TO LACK OF TIME SERVER SIDE LOGIN WAS NOT COMPLETED \r\n      setIsLoggedIn(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <label>\r\n        Username/Email:\r\n        <input type=\"text\" value={username} onChange={handleUsernameChange} />\r\n      </label>\r\n      <label>\r\n        Password:\r\n        <input type=\"password\" value={password} onChange={handlePasswordChange} />\r\n      </label>\r\n      <button type=\"submit\">Login</button>\r\n      <br></br>\r\n      {emailError && <span className='login-error'>{emailError}</span>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}