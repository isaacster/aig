{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos2\\\\pocReactRepository\\\\src\\\\EmployeeContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GlobalContext from './Components/GlobalContext';\nimport EmployeeList from './Components/EmployeeCrud/EmployeeList';\nimport AddEmployee from './Components/EmployeeCrud/AddEmployee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeContainer = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  const handleEntityAdded = newEntity => {\n    // Add the new entity to the entities array in the state\n    setEntities([...entities, newEntity]);\n  };\n  useEffect(() => {\n    fetch(GlobalContext.ApiUrl, {\n      method: 'GET',\n      headers: GlobalContext.headers\n    }).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setEmployees(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EmployeeList, {\n        employees: employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 18\n      }, this), \"  \", /*#__PURE__*/_jsxDEV(AddEmployee, {\n        onEntityAdded: handleEntityAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 58\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(EmployeeContainer, \"CeFSbis8RRTCC0yi9QQ++rx8HNs=\");\n_c = EmployeeContainer;\nexport default EmployeeContainer;\nvar _c;\n$RefreshReg$(_c, \"EmployeeContainer\");","map":{"version":3,"names":["React","useState","useEffect","GlobalContext","EmployeeList","AddEmployee","jsxDEV","_jsxDEV","EmployeeContainer","_s","error","setError","isLoaded","setIsLoaded","employees","setEmployees","handleEntityAdded","newEntity","setEntities","entities","fetch","ApiUrl","method","headers","then","res","json","result","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onEntityAdded","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos2/pocReactRepository/src/EmployeeContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GlobalContext from './Components/GlobalContext';\r\nimport EmployeeList from './Components/EmployeeCrud/EmployeeList';\r\nimport AddEmployee from './Components/EmployeeCrud/AddEmployee';\r\n\r\nconst EmployeeContainer = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [employees, setEmployees] = useState([]);\r\n\r\n  const handleEntityAdded = (newEntity) => {\r\n    // Add the new entity to the entities array in the state\r\n    setEntities([...entities, newEntity]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(GlobalContext.ApiUrl, {\r\n      method: 'GET',\r\n      headers: GlobalContext.headers,\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setEmployees(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (<div><EmployeeList employees={employees} />  <AddEmployee  onEntityAdded={handleEntityAdded}></AddEmployee></div>)\r\n\r\n      ;\r\n  }\r\n};\r\n\r\nexport default EmployeeContainer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,WAAW,MAAM,uCAAuC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhE,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMe,iBAAiB,GAAIC,SAAS,IAAK;IACvC;IACAC,WAAW,CAAC,CAAC,GAAGC,QAAQ,EAAEF,SAAS,CAAC,CAAC;EACvC,CAAC;EAEDf,SAAS,CAAC,MAAM;IACdkB,KAAK,CAACjB,aAAa,CAACkB,MAAM,EAAE;MAC1BC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEpB,aAAa,CAACoB;IACzB,CAAC,CAAC,CACCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CACFG,MAAM,IAAK;MACVd,WAAW,CAAC,IAAI,CAAC;MACjBE,YAAY,CAACY,MAAM,CAAC;IACtB,CAAC,EACAjB,KAAK,IAAK;MACTG,WAAW,CAAC,IAAI,CAAC;MACjBF,QAAQ,CAACD,KAAK,CAAC;IACjB,CACF,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIA,KAAK,EAAE;IACT,oBAAOH,OAAA;MAAAqB,QAAA,GAAK,SAAO,EAAClB,KAAK,CAACmB,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAC1C,CAAC,MAAM,IAAI,CAACrB,QAAQ,EAAE;IACpB,oBAAOL,OAAA;MAAAqB,QAAA,EAAK;IAAU;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B,CAAC,MAAM;IACL,oBAAQ1B,OAAA;MAAAqB,QAAA,gBAAKrB,OAAA,CAACH,YAAY;QAACU,SAAS,EAAEA;MAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,MAAE,eAAA1B,OAAA,CAACF,WAAW;QAAE6B,aAAa,EAAElB;MAAkB;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAG3H;AACF,CAAC;AAACxB,EAAA,CArCID,iBAAiB;AAAA2B,EAAA,GAAjB3B,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}