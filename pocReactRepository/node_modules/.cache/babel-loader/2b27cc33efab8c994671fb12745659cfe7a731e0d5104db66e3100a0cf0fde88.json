{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\aig\\\\pocReactRepository\\\\src\\\\Components\\\\ProjectManagement\\\\EmailReschedule.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { rescheduleEmail } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmailReschedule = _ref => {\n  _s();\n  let {\n    email\n  } = _ref;\n  //const [showDetails, setShowDetails] = useState(false);\n  const [rescheduleOption, setRescheduleOption] = useState(null);\n  const [customDateTime, setCustomDateTime] = useState('');\n  const handleReschedule = async () => {\n    try {\n      // Extract the emailId from the email object or wherever it's available\n      const emailId = email.id;\n      // Compose the message based on the selected rescheduleOption and customDateTime (if applicable)\n      const message = rescheduleOption === 'Custom' ? `Custom reschedule: ${customDateTime}` : `Reschedule to ${rescheduleOption}`;\n\n      // Make the AJAX request to the API with the selected date, emailId, and message\n      await rescheduleEmail(emailId, message);\n\n      // Handle success or show a notification if needed\n      alert('Email re-scheduled successfully!');\n    } catch (error) {\n      // Handle the error or show an error notification\n      alert('Failed to re-schedule email.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRescheduleOption('Later today'),\n            children: \"Later today\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRescheduleOption('Tomorrow'),\n            children: \"Tomorrow\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRescheduleOption('Later this week'),\n            children: \"Later this week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRescheduleOption('This weekend'),\n            children: \"This weekend\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRescheduleOption('Next week'),\n            children: \"Next week\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => setRescheduleOption('Custom'),\n            children: \"Custom date-time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this), rescheduleOption === 'Custom' && /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"datetime-local\",\n            value: customDateTime,\n            onChange: e => setCustomDateTime(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleReschedule,\n            children: \"Reschedule\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(EmailReschedule, \"j2EmRf7b3YUxSYTUef451lbZk+k=\");\n_c = EmailReschedule;\nexport default EmailReschedule;\nvar _c;\n$RefreshReg$(_c, \"EmailReschedule\");","map":{"version":3,"names":["React","useState","rescheduleEmail","jsxDEV","_jsxDEV","EmailReschedule","_ref","_s","email","rescheduleOption","setRescheduleOption","customDateTime","setCustomDateTime","handleReschedule","emailId","id","message","alert","error","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/aig/pocReactRepository/src/Components/ProjectManagement/EmailReschedule.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { rescheduleEmail } from '../api';\r\n\r\nconst EmailReschedule = ({ email }) => {\r\n  //const [showDetails, setShowDetails] = useState(false);\r\n  const [rescheduleOption, setRescheduleOption] = useState(null);\r\n  const [customDateTime, setCustomDateTime] = useState('');\r\n\r\n  const handleReschedule = async () => {\r\n    try {\r\n      // Extract the emailId from the email object or wherever it's available\r\n      const emailId = email.id;\r\n      // Compose the message based on the selected rescheduleOption and customDateTime (if applicable)\r\n      const message =\r\n        rescheduleOption === 'Custom'\r\n          ? `Custom reschedule: ${customDateTime}`\r\n          : `Reschedule to ${rescheduleOption}`;\r\n\r\n      // Make the AJAX request to the API with the selected date, emailId, and message\r\n      await rescheduleEmail(emailId, message);\r\n\r\n      // Handle success or show a notification if needed\r\n      alert('Email re-scheduled successfully!');\r\n    } catch (error) {\r\n      // Handle the error or show an error notification\r\n      alert('Failed to re-schedule email.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Render summary of the email    <div onClick={() => setShowDetails(!showDetails)}> <span>{email.subject}</span>    <span>{email.sender}</span>       </div> */}\r\n    \r\n\r\n      <div className=\"modal\">\r\n    <div className=\"modal-content\">\r\n\r\n      {/* Render reschedule options */}\r\n      {\r\n        <div>\r\n          <button onClick={() => setRescheduleOption('Later today')}>Later today</button>\r\n          <button onClick={() => setRescheduleOption('Tomorrow')}>Tomorrow</button>\r\n          <button onClick={() => setRescheduleOption('Later this week')}>Later this week</button>\r\n          <button onClick={() => setRescheduleOption('This weekend')}>This weekend</button>\r\n          <button onClick={() => setRescheduleOption('Next week')}>Next week</button>\r\n          <button onClick={() => setRescheduleOption('Custom')}>Custom date-time</button>\r\n          {rescheduleOption === 'Custom' && (\r\n            <input\r\n              type=\"datetime-local\"\r\n              value={customDateTime}\r\n              onChange={(e) => setCustomDateTime(e.target.value)}\r\n            />\r\n          )}\r\n          <button onClick={handleReschedule}>Reschedule</button>\r\n        </div>\r\n     }\r\n    </div>\r\n    </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailReschedule;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}