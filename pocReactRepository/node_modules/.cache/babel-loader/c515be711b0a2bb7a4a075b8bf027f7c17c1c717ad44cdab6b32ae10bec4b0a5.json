{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos2\\\\pocReactRepository\\\\src\\\\EmployeeContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport GlobalContext from './Components/GlobalContext';\nimport EmployeeList from './Components/EmployeeCrud/EmployeeList';\nimport AddEmployee from './Components/EmployeeCrud/AddEmployee';\nimport DeleteEmployee from './Components/EmployeeCrud/DeleteEmployee';\nimport UpdateEmployee from './Components/EmployeeCrud/UpdateEmployee';\nimport ViewEmployee from './Components/EmployeeCrud/ViewEmployee';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeContainer = () => {\n  _s();\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [employees, setEmployees] = useState([]);\n  // const [entities, setEntities] = useState([]);\n  const handleEntityAdded = newEntity => {\n    setEmployees([...employees, newEntity]);\n  };\n  const handleEntityDeleted = employeeId => {\n    const idToDelete = parseInt(employeeId);\n    const updatedEmployees = employees.filter(employee => employee.id !== idToDelete);\n    // Update the state with the new employees array (without the deleted employee)\n    setEmployees(updatedEmployees);\n  };\n  useEffect(() => {\n    fetch(GlobalContext.ApiUrl, {\n      method: 'GET',\n      headers: GlobalContext.headers\n    }).then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setEmployees(result);\n    }, error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  } else if (!isLoaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(EmployeeList, {\n        employees: employees\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(AddEmployee, {\n        onEntityAdded: handleEntityAdded\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(UpdateEmployee, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 7\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(ViewEmployee, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(DeleteEmployee, {\n        onEntityDeleted: handleEntityDeleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, this), \"*****************\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this);\n  }\n};\n_s(EmployeeContainer, \"CeFSbis8RRTCC0yi9QQ++rx8HNs=\");\n_c = EmployeeContainer;\nexport default EmployeeContainer;\nvar _c;\n$RefreshReg$(_c, \"EmployeeContainer\");","map":{"version":3,"names":["React","useState","useEffect","GlobalContext","EmployeeList","AddEmployee","DeleteEmployee","UpdateEmployee","ViewEmployee","jsxDEV","_jsxDEV","EmployeeContainer","_s","error","setError","isLoaded","setIsLoaded","employees","setEmployees","handleEntityAdded","newEntity","handleEntityDeleted","employeeId","idToDelete","parseInt","updatedEmployees","filter","employee","id","fetch","ApiUrl","method","headers","then","res","json","result","children","message","fileName","_jsxFileName","lineNumber","columnNumber","onEntityAdded","onEntityDeleted","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos2/pocReactRepository/src/EmployeeContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport GlobalContext from './Components/GlobalContext';\r\nimport EmployeeList from './Components/EmployeeCrud/EmployeeList';\r\nimport AddEmployee from './Components/EmployeeCrud/AddEmployee';\r\nimport DeleteEmployee from './Components/EmployeeCrud/DeleteEmployee';\r\nimport UpdateEmployee from './Components/EmployeeCrud/UpdateEmployee';\r\nimport ViewEmployee from './Components/EmployeeCrud/ViewEmployee';\r\n\r\n\r\nconst EmployeeContainer = () => {\r\n  const [error, setError] = useState(null);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [employees, setEmployees] = useState([]);\r\n  // const [entities, setEntities] = useState([]);\r\n  const handleEntityAdded = (newEntity) => {\r\n    setEmployees([...employees, newEntity]);\r\n  };\r\n\r\n  const handleEntityDeleted = (employeeId) => {\r\n    const idToDelete = parseInt(employeeId);\r\n    const updatedEmployees = employees.filter((employee) => employee.id !== idToDelete);\r\n    // Update the state with the new employees array (without the deleted employee)\r\n    setEmployees(updatedEmployees);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetch(GlobalContext.ApiUrl, {\r\n      method: 'GET',\r\n      headers: GlobalContext.headers,\r\n    })\r\n      .then((res) => res.json())\r\n      .then(\r\n        (result) => {\r\n          setIsLoaded(true);\r\n          setEmployees(result);\r\n        },\r\n        (error) => {\r\n          setIsLoaded(true);\r\n          setError(error);\r\n        }\r\n      );\r\n  }, []);\r\n\r\n  if (error) {\r\n    return <div>Error: {error.message}</div>;\r\n  } else if (!isLoaded) {\r\n    return <div>Loading...</div>;\r\n  } else {\r\n    return (<div><EmployeeList employees={employees} />\r\n      <AddEmployee onEntityAdded={handleEntityAdded}></AddEmployee>\r\n      *****************\r\n      <UpdateEmployee> </UpdateEmployee>\r\n      *****************\r\n      <ViewEmployee></ViewEmployee>\r\n      *****************\r\n      <DeleteEmployee onEntityDeleted={handleEntityDeleted}></DeleteEmployee>\r\n      *****************\r\n    </div>)\r\n\r\n      ;\r\n  }\r\n};\r\n\r\nexport default EmployeeContainer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}