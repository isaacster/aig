{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos2\\\\pocReactRepository\\\\src\\\\Components\\\\EmployeeCrud\\\\UpdateEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DOMPurify from 'dompurify';\nimport GlobalContext from '../../Components/GlobalContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateEmployee = _ref => {\n  _s();\n  let {\n    onEntityUpdated\n  } = _ref;\n  const [employeeId, setEmployeeId] = useState('');\n  const [name, setName] = useState('');\n  const [job, setJob] = useState('');\n  const [workstationNo, setWorkstationNo] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleUpdateEmployee = () => {\n    const employee = {\n      //try something like <img src=x onerror=\"alert(\\'XSS attack!\\');\">\n      name: DOMPurify.sanitize(name),\n      job: DOMPurify.sanitize(job),\n      workstationNo: DOMPurify.sanitize(workstationNo)\n    };\n    fetch(`${GlobalContext.ApiUrl}/${employeeId}`, {\n      method: 'PUT',\n      headers: GlobalContext.headers,\n      body: JSON.stringify(employee)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Employee not found');\n      }\n      setSuccessMessage('Employee updated successfully');\n      employee.id = employeeId;\n      onEntityUpdated(employee);\n    }).catch(error => console.error(error));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Employee ID:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: employeeId,\n          onChange: event => setEmployeeId(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: event => setName(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: job,\n          onChange: event => setJob(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Job:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: WorkstationNo,\n          onChange: event => setWorkstationNo(event.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpdateEmployee,\n      children: \"Update Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), successMessage ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"  \", successMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateEmployee, \"0INKVczBc4P/CKclHY2myUNZ+oM=\");\n_c = UpdateEmployee;\nexport default UpdateEmployee;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmployee\");","map":{"version":3,"names":["React","useState","DOMPurify","GlobalContext","jsxDEV","_jsxDEV","UpdateEmployee","_ref","_s","onEntityUpdated","employeeId","setEmployeeId","name","setName","job","setJob","workstationNo","setWorkstationNo","successMessage","setSuccessMessage","handleUpdateEmployee","employee","sanitize","fetch","ApiUrl","method","headers","body","JSON","stringify","then","response","ok","Error","id","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","event","target","WorkstationNo","onClick","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos2/pocReactRepository/src/Components/EmployeeCrud/UpdateEmployee.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DOMPurify from 'dompurify';\r\nimport GlobalContext from '../../Components/GlobalContext';\r\n\r\nconst UpdateEmployee = ({ onEntityUpdated }) => {\r\n  const [employeeId, setEmployeeId] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [job, setJob] = useState('');\r\n\r\n  const [workstationNo, setWorkstationNo] = useState('');\r\n\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleUpdateEmployee = () => {\r\n\r\n    const employee = {\r\n      //try something like <img src=x onerror=\"alert(\\'XSS attack!\\');\">\r\n      name: DOMPurify.sanitize(name),\r\n      job: DOMPurify.sanitize(job),\r\n      workstationNo: DOMPurify.sanitize(workstationNo),      \r\n    };\r\n\r\n    fetch(`${GlobalContext.ApiUrl}/${employeeId}`, {\r\n      method: 'PUT',\r\n      headers: GlobalContext.headers,\r\n      body: JSON.stringify(employee),\r\n    })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          throw new Error('Employee not found');\r\n        }\r\n        setSuccessMessage('Employee updated successfully');\r\n        employee.id = employeeId;\r\n        onEntityUpdated(employee);\r\n      })\r\n      .catch((error) => console.error(error));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Update Employee</h2>\r\n      <div>\r\n        <label>\r\n          Employee ID:\r\n          <input\r\n            type=\"text\"\r\n            value={employeeId}\r\n            onChange={(event) => setEmployeeId(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Name:\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(event) => setName(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Job:\r\n          <input\r\n            type=\"text\"\r\n            value={job}\r\n            onChange={(event) => setJob(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <div>\r\n        <label>\r\n          Job:\r\n          <input\r\n            type=\"text\"\r\n            value={WorkstationNo}\r\n            onChange={(event) => setWorkstationNo(event.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n      <button onClick={handleUpdateEmployee}>Update Employee</button>\r\n      {successMessage ? <h2>  {successMessage}</h2> : null}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEmployee;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,WAAW;AACjC,OAAOC,aAAa,MAAM,gCAAgC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,cAAc,GAAGC,IAAA,IAAyB;EAAAC,EAAA;EAAA,IAAxB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EACzC,MAAM,CAACG,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACa,GAAG,EAAEC,MAAM,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAM,CAACiB,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMmB,oBAAoB,GAAGA,CAAA,KAAM;IAEjC,MAAMC,QAAQ,GAAG;MACf;MACAT,IAAI,EAAEV,SAAS,CAACoB,QAAQ,CAACV,IAAI,CAAC;MAC9BE,GAAG,EAAEZ,SAAS,CAACoB,QAAQ,CAACR,GAAG,CAAC;MAC5BE,aAAa,EAAEd,SAAS,CAACoB,QAAQ,CAACN,aAAa;IACjD,CAAC;IAEDO,KAAK,CAAE,GAAEpB,aAAa,CAACqB,MAAO,IAAGd,UAAW,EAAC,EAAE;MAC7Ce,MAAM,EAAE,KAAK;MACbC,OAAO,EAAEvB,aAAa,CAACuB,OAAO;MAC9BC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACR,QAAQ;IAC/B,CAAC,CAAC,CACCS,IAAI,CAAEC,QAAQ,IAAK;MAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACvC;MACAd,iBAAiB,CAAC,+BAA+B,CAAC;MAClDE,QAAQ,CAACa,EAAE,GAAGxB,UAAU;MACxBD,eAAe,CAACY,QAAQ,CAAC;IAC3B,CAAC,CAAC,CACDc,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC,CAAC;EAC3C,CAAC;EAED,oBACE/B,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxBrC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAAAiC,QAAA,GAAO,cAEL,eAAAjC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAElC,UAAW;UAClBmC,QAAQ,EAAGC,KAAK,IAAKnC,aAAa,CAACmC,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAAAiC,QAAA,GAAO,OAEL,eAAAjC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEhC,IAAK;UACZiC,QAAQ,EAAGC,KAAK,IAAKjC,OAAO,CAACiC,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAAAiC,QAAA,GAAO,MAEL,eAAAjC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE9B,GAAI;UACX+B,QAAQ,EAAGC,KAAK,IAAK/B,MAAM,CAAC+B,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrC,OAAA;MAAAiC,QAAA,eACEjC,OAAA;QAAAiC,QAAA,GAAO,MAEL,eAAAjC,OAAA;UACEsC,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEI,aAAc;UACrBH,QAAQ,EAAGC,KAAK,IAAK7B,gBAAgB,CAAC6B,KAAK,CAACC,MAAM,CAACH,KAAK;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,eACNrC,OAAA;MAAQ4C,OAAO,EAAE7B,oBAAqB;MAAAkB,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC9DxB,cAAc,gBAAGb,OAAA;MAAAiC,QAAA,GAAI,IAAE,EAACpB,cAAc;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,GAAG,IAAI;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjD,CAAC;AAEV,CAAC;AAAClC,EAAA,CAjFIF,cAAc;AAAA4C,EAAA,GAAd5C,cAAc;AAmFpB,eAAeA,cAAc;AAAC,IAAA4C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}