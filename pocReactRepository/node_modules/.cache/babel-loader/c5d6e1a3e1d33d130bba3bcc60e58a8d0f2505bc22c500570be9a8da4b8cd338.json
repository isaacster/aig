{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos2\\\\pocReactRepository\\\\src\\\\Components\\\\ProjectManagement\\\\ProjectDetails.js\",\n  _s = $RefreshSig$();\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchProjectDetails } from './actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProjectDetailsPopup = _ref => {\n  _s();\n  let {\n    projectId,\n    onClose\n  } = _ref;\n  const dispatch = useDispatch();\n  const projectDetails = useSelector(state => state.projects.projectDetails);\n  useEffect(() => {\n    // Get project details when the pop-up is opened\n    if (projectId) {\n      dispatch(fetchProjectDetails(projectId));\n    }\n  }, [dispatch, projectId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: projectDetails ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Project Details\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"ID: \", projectDetails.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Name: \", projectDetails.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Client: \", projectDetails.client]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: onClose,\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading project details...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n_s(ProjectDetailsPopup, \"oe8PBWoLDYYF0HPC4GNcODz+ig4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = ProjectDetailsPopup;\nvar _c;\n$RefreshReg$(_c, \"ProjectDetailsPopup\");","map":{"version":3,"names":["useSelector","useDispatch","fetchProjectDetails","jsxDEV","_jsxDEV","Fragment","_Fragment","ProjectDetailsPopup","_ref","_s","projectId","onClose","dispatch","projectDetails","state","projects","useEffect","children","fileName","_jsxFileName","lineNumber","columnNumber","id","name","client","onClick","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos2/pocReactRepository/src/Components/ProjectManagement/ProjectDetails.js"],"sourcesContent":["import { useSelector, useDispatch } from 'react-redux';\r\nimport { fetchProjectDetails } from './actions';\r\n\r\nconst ProjectDetailsPopup = ({ projectId, onClose }) => {\r\n  const dispatch = useDispatch();\r\n  const projectDetails = useSelector((state) => state.projects.projectDetails);\r\n\r\n  useEffect(() => {\r\n    // Get project details when the pop-up is opened\r\n    if (projectId) {\r\n      dispatch(fetchProjectDetails(projectId));\r\n    }\r\n  }, [dispatch, projectId]);\r\n\r\n  return (\r\n    <div>\r\n      {projectDetails ? (\r\n        <>\r\n          <h2>Project Details</h2>\r\n          <p>ID: {projectDetails.id}</p>\r\n          <p>Name: {projectDetails.name}</p>\r\n          <p>Client: {projectDetails.client}</p>\r\n          {/* Add other project details here */}\r\n          <button onClick={onClose}>Close</button>\r\n        </>\r\n      ) : (\r\n        <p>Loading project details...</p>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n"],"mappings":";;AAAA,SAASA,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,mBAAmB,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhD,MAAMC,mBAAmB,GAAGC,IAAA,IAA4B;EAAAC,EAAA;EAAA,IAA3B;IAAEC,SAAS;IAAEC;EAAQ,CAAC,GAAAH,IAAA;EACjD,MAAMI,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAMY,cAAc,GAAGb,WAAW,CAAEc,KAAK,IAAKA,KAAK,CAACC,QAAQ,CAACF,cAAc,CAAC;EAE5EG,SAAS,CAAC,MAAM;IACd;IACA,IAAIN,SAAS,EAAE;MACbE,QAAQ,CAACV,mBAAmB,CAACQ,SAAS,CAAC,CAAC;IAC1C;EACF,CAAC,EAAE,CAACE,QAAQ,EAAEF,SAAS,CAAC,CAAC;EAEzB,oBACEN,OAAA;IAAAa,QAAA,EACGJ,cAAc,gBACbT,OAAA,CAAAE,SAAA;MAAAW,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBjB,OAAA;QAAAa,QAAA,GAAG,MAAI,EAACJ,cAAc,CAACS,EAAE;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9BjB,OAAA;QAAAa,QAAA,GAAG,QAAM,EAACJ,cAAc,CAACU,IAAI;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClCjB,OAAA;QAAAa,QAAA,GAAG,UAAQ,EAACJ,cAAc,CAACW,MAAM;MAAA;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEtCjB,OAAA;QAAQqB,OAAO,EAAEd,OAAQ;QAAAM,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA,eACxC,CAAC,gBAEHjB,OAAA;MAAAa,QAAA,EAAG;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACZ,EAAA,CA3BIF,mBAAmB;EAAA,QACNN,WAAW,EACLD,WAAW;AAAA;AAAA0B,EAAA,GAF9BnB,mBAAmB;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}