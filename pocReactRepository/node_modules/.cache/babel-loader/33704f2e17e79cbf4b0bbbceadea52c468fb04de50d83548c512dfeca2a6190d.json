{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos2\\\\pocReactRepository\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport FC from \"./Components/FunctionalComp\";\nimport { ClassComp, ClassComp1 } from \"./Components/ClassComp\";\nimport Click from \"./Components/Click\";\nimport Counter from \"./Components/Counter\";\nimport ParentComp from \"./Components/ParentComp\";\nimport Employee from \"./Components/Employee\";\nimport AddEmployee from \"./Components/EmployeeCrud/AddEmployee\";\nimport ViewEmployee from \"./Components/EmployeeCrud/ViewEmployee\";\nimport UpdateEmployee from \"./Components/EmployeeCrud/UpdateEmployee\";\nimport DeleteEmployee from \"./Components/EmployeeCrud/DeleteEmployee\";\nimport GlobalContext from './Components/GlobalContext';\nimport LoginForm from './Components/LoginForm';\nimport { AuthContext } from './Components/AuthContext';\nimport React, { useContext, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  /* In real life application the react app will forward the requests to a local server which will call the Employee API so token and api url will not be exposed  */\n  GlobalContext.ApiUrl = \"https://localhost:44320/employeesgate\"; //\"https://localhost:44375/employees\";\n  //GlobalContext.ApiToken = \"xd4f!dfsd@sdf\";\n  GlobalContext.headers = {\n    'Content-Type': 'application/json'\n  };\n  const {\n    isLoggedIn\n  } = useContext(AuthContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: [\"Simplifications and Assumptions\", /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"App is not using state management such as Redux so you need to refresh after updating/adding employees\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), isLoggedIn ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Employee, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(ViewEmployee, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(AddEmployee, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(UpdateEmployee, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this), \"*****************\", /*#__PURE__*/_jsxDEV(DeleteEmployee, {\n        children: \" \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(LoginForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"k0eKnAnvTWhpQrZ9lRleN6NVN6Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["FC","ClassComp","ClassComp1","Click","Counter","ParentComp","Employee","AddEmployee","ViewEmployee","UpdateEmployee","DeleteEmployee","GlobalContext","LoginForm","AuthContext","React","useContext","useState","jsxDEV","_jsxDEV","App","_s","ApiUrl","headers","isLoggedIn","children","style","color","fileName","_jsxFileName","lineNumber","columnNumber","Fragment","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos2/pocReactRepository/src/App.js"],"sourcesContent":["import './App.css';\nimport FC from \"./Components/FunctionalComp\";\nimport { ClassComp, ClassComp1 } from \"./Components/ClassComp\";\nimport Click from \"./Components/Click\";\nimport Counter from \"./Components/Counter\";\nimport ParentComp from \"./Components/ParentComp\";\nimport Employee from \"./Components/Employee\";\nimport AddEmployee from \"./Components/EmployeeCrud/AddEmployee\";\nimport ViewEmployee from \"./Components/EmployeeCrud/ViewEmployee\";\nimport UpdateEmployee from \"./Components/EmployeeCrud/UpdateEmployee\";\nimport DeleteEmployee from \"./Components/EmployeeCrud/DeleteEmployee\";\nimport GlobalContext from './Components/GlobalContext';\nimport LoginForm from './Components/LoginForm';\nimport { AuthContext } from './Components/AuthContext';\nimport React, { useContext,useState } from 'react';\n\nfunction App() {\n\n  /* In real life application the react app will forward the requests to a local server which will call the Employee API so token and api url will not be exposed  */\n  GlobalContext.ApiUrl = \"https://localhost:44320/employeesgate\";      //\"https://localhost:44375/employees\";\n  //GlobalContext.ApiToken = \"xd4f!dfsd@sdf\";\n  GlobalContext.headers = { 'Content-Type': 'application/json' };\n  const { isLoggedIn } = useContext(AuthContext);\n\n  return (\n    <div>\n\n      <p style={{ color: \"red\" }}>\n        Simplifications and Assumptions\n        <p>\n          App is not using state management such as Redux so you need to refresh after updating/adding employees\n        </p>\n\n      </p>\n\n\n\n\n      {/* Conditionally render multiple components */}\n      {isLoggedIn ? (\n        <React.Fragment>\n          <Employee> </Employee>\n          *****************\n          <ViewEmployee></ViewEmployee>\n          *****************\n          <AddEmployee></AddEmployee>\n          *****************\n          <UpdateEmployee> </UpdateEmployee>\n          *****************\n          <DeleteEmployee> </DeleteEmployee>\n        </React.Fragment>\n      ) : (\n        <LoginForm />\n      )}\n\n\n\n\n\n      {\n\n\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,OAAOA,EAAE,MAAM,6BAA6B;AAC5C,SAASC,SAAS,EAAEC,UAAU,QAAQ,wBAAwB;AAC9D,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,YAAY,MAAM,wCAAwC;AACjE,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,cAAc,MAAM,0CAA0C;AACrE,OAAOC,aAAa,MAAM,4BAA4B;AACtD,OAAOC,SAAS,MAAM,wBAAwB;AAC9C,SAASC,WAAW,QAAQ,0BAA0B;AACtD,OAAOC,KAAK,IAAIC,UAAU,EAACC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEb;EACAT,aAAa,CAACU,MAAM,GAAG,uCAAuC,CAAC,CAAM;EACrE;EACAV,aAAa,CAACW,OAAO,GAAG;IAAE,cAAc,EAAE;EAAmB,CAAC;EAC9D,MAAM;IAAEC;EAAW,CAAC,GAAGR,UAAU,CAACF,WAAW,CAAC;EAE9C,oBACEK,OAAA;IAAAM,QAAA,gBAEEN,OAAA;MAAGO,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAF,QAAA,GAAC,iCAE1B,eAAAN,OAAA;QAAAM,QAAA,EAAG;MAEH;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEH,CAAC,EAMHP,UAAU,gBACTL,OAAA,CAACJ,KAAK,CAACiB,QAAQ;MAAAP,QAAA,gBACbN,OAAA,CAACZ,QAAQ;QAAAkB,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,qBAEtB,eAAAZ,OAAA,CAACV,YAAY;QAAAmB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAe,CAAC,qBAE7B,eAAAZ,OAAA,CAACX,WAAW;QAAAoB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAc,CAAC,qBAE3B,eAAAZ,OAAA,CAACT,cAAc;QAAAe,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC,qBAElC,eAAAZ,OAAA,CAACR,cAAc;QAAAc,QAAA,EAAC;MAAC;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAgB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC,gBAEjBZ,OAAA,CAACN,SAAS;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACb;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAWE,CAAC;AAEV;AAACV,EAAA,CAlDQD,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAoDZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}