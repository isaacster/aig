{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\itzik\\\\source\\\\repos\\\\pocReactRepository\\\\src\\\\Components\\\\EmployeeCrud\\\\AddEmployee.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport DOMPurify from 'dompurify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddEmployee = () => {\n  _s();\n  const [name, setName] = useState('');\n  const [job, setJob] = useState('');\n  const [successMessage, setSuccessMessage] = useState('');\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (!name) {\n      return;\n    }\n    const employee = {\n      //try something like <img src=x onerror=\"alert(\\'XSS attack!\\');\">\n      name: DOMPurify.sanitize(name),\n      job: DOMPurify.sanitize(job)\n    };\n    fetch('https://localhost:44375/employees', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(employee)\n    }).then(response => response.json()).then(data => {\n      console.log('New employee ID:', data);\n      // Reset the form fields\n      setName('');\n      setJob('');\n      setSuccessMessage('New employee ID:' + data);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: name,\n            onChange: event => setName(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Job:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: job,\n            onChange: event => setJob(event.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Employee\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), successMessage ? /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"New employee added: \", successMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 26\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(AddEmployee, \"DXKhZibIcU+N2Vvb468KbdK1WK0=\");\n_c = AddEmployee;\nexport default AddEmployee;\nvar _c;\n$RefreshReg$(_c, \"AddEmployee\");","map":{"version":3,"names":["React","useState","DOMPurify","jsxDEV","_jsxDEV","AddEmployee","_s","name","setName","job","setJob","successMessage","setSuccessMessage","handleSubmit","event","preventDefault","employee","sanitize","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["C:/Users/itzik/source/repos/pocReactRepository/src/Components/EmployeeCrud/AddEmployee.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport DOMPurify from 'dompurify';\r\n\r\nconst AddEmployee = () => {\r\n  const [name, setName] = useState('');\r\n  const [job, setJob] = useState('');\r\n  const [successMessage, setSuccessMessage] = useState('');\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(!name){\r\n      return;\r\n    }\r\n \r\n    const employee = {\r\n    //try something like <img src=x onerror=\"alert(\\'XSS attack!\\');\">\r\n      name: DOMPurify.sanitize(name),\r\n      job: DOMPurify.sanitize(job),\r\n    };\r\n\r\n    fetch   ('https://localhost:44375/employees', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify(employee),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        console.log('New employee ID:', data);\r\n        // Reset the form fields\r\n        setName('');\r\n        setJob('');\r\n        setSuccessMessage('New employee ID:' + data);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Add Employee</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <div>\r\n          <label>\r\n            Name:\r\n            <input\r\n              type=\"text\"\r\n              value={name}\r\n              onChange={(event) => setName(event.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <div>\r\n          <label>\r\n            Job:\r\n            <input\r\n              type=\"text\"\r\n              value={job}\r\n              onChange={(event) => setJob(event.target.value)}\r\n            />\r\n          </label>\r\n        </div>\r\n        <button type=\"submit\">Add Employee</button>\r\n      </form>\r\n\r\n      {successMessage ?  <h2>New employee added: {successMessage}</h2> : null}\r\n\r\n     \r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddEmployee;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}