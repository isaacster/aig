{"ast":null,"code":"import myDjsonSampleata from './data.json';\nimport axios from 'axios';\nexport const UPDATE_EMAIL_SUCCESS = 'UPDATE_EMAIL_SUCCESS';\nexport const UPDATE_EMAIL_FAILURE = 'UPDATE_EMAIL_FAILURE';\n\n// Action creator to fetch data from the API\nexport const fetchData = () => {\n  return async dispatch => {\n    try {\n      // Dispatch a loading action to indicate that data is being fetched\n      dispatch({\n        type: 'FETCH_DATA_LOADING'\n      });\n\n      // Fetch data from the API\n      const response = myDjsonSampleata;\n\n      // Dispatch a success action with the received data\n      dispatch({\n        type: 'FETCH_DATA_SUCCESS',\n        payload: response\n      });\n    } catch (error) {\n      // Dispatch a failure action if the API call fails\n      dispatch({\n        type: 'FETCH_DATA_FAILURE',\n        payload: error.message\n      });\n    }\n  };\n};\n\n/*\r\nexport const fetchEmailDetails = (emailId) => async (dispatch) => {\r\n  try {\r\n    \r\n    \r\n    const emailData = myDjsonSampleata;\r\n\r\n    const filtered = emailData.emails.filter(proj => {\r\n      return proj.id === emailId;\r\n    });\r\n\r\n \r\n    dispatch({ type: 'FETCH_EMAIL_DETAILS_SUCCESS', payload: filtered[0] });\r\n  } catch (error) {\r\n    dispatch({ type: 'FETCH_EMAIL_DETAILS_FAILURE', error: 'Failed to fetch email details.' });\r\n  }\r\n};\r\n*/","map":{"version":3,"names":["myDjsonSampleata","axios","UPDATE_EMAIL_SUCCESS","UPDATE_EMAIL_FAILURE","fetchData","dispatch","type","response","payload","error","message"],"sources":["C:/Users/itzik/source/aig/pocReactRepository/src/actions/emailActions.js"],"sourcesContent":["import myDjsonSampleata from './data.json';\r\nimport axios from 'axios';\r\n\r\nexport const UPDATE_EMAIL_SUCCESS = 'UPDATE_EMAIL_SUCCESS';\r\nexport const UPDATE_EMAIL_FAILURE = 'UPDATE_EMAIL_FAILURE';\r\n\r\n// Action creator to fetch data from the API\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    try {\r\n      // Dispatch a loading action to indicate that data is being fetched\r\n      dispatch({ type: 'FETCH_DATA_LOADING' });\r\n\r\n      // Fetch data from the API\r\n      const response = myDjsonSampleata;\r\n\r\n      // Dispatch a success action with the received data\r\n      dispatch({ type: 'FETCH_DATA_SUCCESS', payload: response });\r\n    } catch (error) {\r\n      // Dispatch a failure action if the API call fails\r\n      dispatch({ type: 'FETCH_DATA_FAILURE', payload: error.message });\r\n    }\r\n  };\r\n};\r\n\r\n/*\r\nexport const fetchEmailDetails = (emailId) => async (dispatch) => {\r\n  try {\r\n    \r\n    \r\n    const emailData = myDjsonSampleata;\r\n\r\n    const filtered = emailData.emails.filter(proj => {\r\n      return proj.id === emailId;\r\n    });\r\n\r\n \r\n    dispatch({ type: 'FETCH_EMAIL_DETAILS_SUCCESS', payload: filtered[0] });\r\n  } catch (error) {\r\n    dispatch({ type: 'FETCH_EMAIL_DETAILS_FAILURE', error: 'Failed to fetch email details.' });\r\n  }\r\n};\r\n*/"],"mappings":"AAAA,OAAOA,gBAAgB,MAAM,aAAa;AAC1C,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;AAC1D,OAAO,MAAMC,oBAAoB,GAAG,sBAAsB;;AAE1D;AACA,OAAO,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAC7B,OAAO,MAAOC,QAAQ,IAAK;IACzB,IAAI;MACF;MACAA,QAAQ,CAAC;QAAEC,IAAI,EAAE;MAAqB,CAAC,CAAC;;MAExC;MACA,MAAMC,QAAQ,GAAGP,gBAAgB;;MAEjC;MACAK,QAAQ,CAAC;QAAEC,IAAI,EAAE,oBAAoB;QAAEE,OAAO,EAAED;MAAS,CAAC,CAAC;IAC7D,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd;MACAJ,QAAQ,CAAC;QAAEC,IAAI,EAAE,oBAAoB;QAAEE,OAAO,EAAEC,KAAK,CAACC;MAAQ,CAAC,CAAC;IAClE;EACF,CAAC;AACH,CAAC;;AAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}