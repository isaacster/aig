{"ast":null,"code":"// a separate file for API related functions\nimport axios from 'axios';\nimport GlobalContext from '../Components/GlobalContext';\nexport const rescheduleEmail = async (email, newDateTime) => {\n  try {\n    debugger;\n    const requestModel = {\n      MessageId: email.messageId,\n      emailMessage: email.message,\n      RescheduleTime: newDateTime,\n      Recipient: email.recipient\n    };\n\n    //`${GlobalContext.ApiUrl}Email/RescheduleAction`\n\n    // Make the Axios POST request\n    const response = await axios.post(`${GlobalContext.ApiUrl}Email/RescheduleAction`, requestModel, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    return response.data; // If needed, return the response data\n  } catch (error) {\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","GlobalContext","rescheduleEmail","email","newDateTime","requestModel","MessageId","messageId","emailMessage","message","RescheduleTime","Recipient","recipient","response","post","ApiUrl","headers","data","error"],"sources":["C:/Users/itzik/source/aig/pocReactRepository/src/Components/api.js"],"sourcesContent":["// a separate file for API related functions\r\nimport axios from 'axios';\r\nimport GlobalContext from '../Components/GlobalContext';\r\n\r\nexport const rescheduleEmail = async (email, newDateTime) => {\r\n    try {\r\n        debugger;\r\n\r\n\r\n      const requestModel = {\r\n        MessageId: email.messageId,\r\n        emailMessage: email.message,\r\n        RescheduleTime: newDateTime,\r\n        Recipient: email.recipient\r\n      };\r\n  \r\n      //`${GlobalContext.ApiUrl}Email/RescheduleAction`\r\n\r\n      // Make the Axios POST request\r\n      const response = await axios.post(\r\n        `${GlobalContext.ApiUrl}Email/RescheduleAction`,\r\n        requestModel,\r\n        {\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n        }\r\n      );\r\n\r\n      \r\n        return response.data; // If needed, return the response data\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n};"],"mappings":"AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,aAAa,MAAM,6BAA6B;AAEvD,OAAO,MAAMC,eAAe,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,KAAK;EACzD,IAAI;IACA;IAGF,MAAMC,YAAY,GAAG;MACnBC,SAAS,EAAEH,KAAK,CAACI,SAAS;MAC1BC,YAAY,EAAEL,KAAK,CAACM,OAAO;MAC3BC,cAAc,EAAEN,WAAW;MAC3BO,SAAS,EAAER,KAAK,CAACS;IACnB,CAAC;;IAED;;IAEA;IACA,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAC9B,GAAEb,aAAa,CAACc,MAAO,wBAAuB,EAC/CV,YAAY,EACZ;MACEW,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CACF,CAAC;IAGC,OAAOH,QAAQ,CAACI,IAAI,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZ,MAAMA,KAAK;EACf;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}